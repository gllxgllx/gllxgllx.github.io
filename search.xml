<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>test</title>
      <link href="/2024/03/02/test/"/>
      <url>/2024/03/02/test/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo回归测试"><a href="#hexo回归测试" class="headerlink" title=" hexo回归测试"></a><center> hexo回归测试</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>test</p>]]></content>
      
      
      <categories>
          
          <category> 博客设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Android studio|关于gridview的使用</title>
      <link href="/2023/03/20/Android-studio-%E5%85%B3%E4%BA%8Egridview%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
      <url>/2023/03/20/Android-studio-%E5%85%B3%E4%BA%8Egridview%E7%9A%84%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="Android-studio-关于gridview的使用"><a href="#Android-studio-关于gridview的使用" class="headerlink" title=" Android studio|关于gridview的使用"></a><center> Android studio|关于gridview的使用</h1><h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><p>当你需要在你的Android应用程序中显示一组类似于网格的数据时，可以使用GridView组件。GridView是一个在Android Studio中预定义的可重复使用组件，可以让你轻松地以网格形式显示数据。   </p><h2 id="一般步骤"><a href="#一般步骤" class="headerlink" title="一般步骤"></a>一般步骤</h2><p>1.在你的XML布局文件中添加GridView组件。</p><p>2.创建一个类来表示每个单元格的数据（例如一个简单的Java类）。</p><p>3.创建一个类来实现Adapter接口并定义如何将数据绑定到单元格视图。</p><p>4.创建一个数据列表，并创建一个Adapter对象，将列表数据与GridView组件绑定。   </p><h2 id="演示"><a href="#演示" class="headerlink" title="演示"></a>演示</h2><p>下面是一个简单的例子，演示如何在Android Studio中使用GridView：   </p><h3 id="在XML布局文件中添加GridView组件："><a href="#在XML布局文件中添加GridView组件：" class="headerlink" title="在XML布局文件中添加GridView组件："></a>在XML布局文件中添加GridView组件：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;GridView</span><br><span class="line">    android:id=&quot;@+id/grid_view&quot;</span><br><span class="line">    android:layout_width=&quot;match_parent&quot;</span><br><span class="line">    android:layout_height=&quot;match_parent&quot;</span><br><span class="line">    android:numColumns=&quot;3&quot;</span><br><span class="line">    android:verticalSpacing=&quot;10dp&quot;</span><br><span class="line">    android:horizontalSpacing=&quot;10dp&quot;</span><br><span class="line">    android:stretchMode=&quot;columnWidth&quot;</span><br><span class="line">    android:gravity=&quot;center&quot;</span><br><span class="line">    /&gt;</span><br></pre></td></tr></table></figure><p>这个布局文件定义了一个GridView组件，它将显示3列数据，每个单元格之间有10dp的垂直和水平间距。’android:stretchMode’属性设置为’columnWidth’，这样每个单元格的宽度都会根据列宽度平均分配。</p><h3 id="创建一个类来表示每个单元格的数据，例如一个简单的Java类："><a href="#创建一个类来表示每个单元格的数据，例如一个简单的Java类：" class="headerlink" title="创建一个类来表示每个单元格的数据，例如一个简单的Java类："></a>创建一个类来表示每个单元格的数据，例如一个简单的Java类：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class GridItem &#123;</span><br><span class="line">    private int image;</span><br><span class="line">    private String title;</span><br><span class="line">    </span><br><span class="line">    public GridItem(int image, String title) &#123;</span><br><span class="line">        this.image = image;</span><br><span class="line">        this.title = title;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public int getImage() &#123;</span><br><span class="line">        return image;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    public String getTitle() &#123;</span><br><span class="line">        return title;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个类表示每个单元格的数据，包括图像和标题。</p><h3 id="创建一个类来实现Adapter接口并定义如何将数据绑定到单元格视图："><a href="#创建一个类来实现Adapter接口并定义如何将数据绑定到单元格视图：" class="headerlink" title="创建一个类来实现Adapter接口并定义如何将数据绑定到单元格视图："></a>创建一个类来实现Adapter接口并定义如何将数据绑定到单元格视图：</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">public class GridAdapter extends BaseAdapter &#123;</span><br><span class="line">    private Context context;</span><br><span class="line">    private List&lt;GridItem&gt; items;</span><br><span class="line">    </span><br><span class="line">    public GridAdapter(Context context, List&lt;GridItem&gt; items) &#123;</span><br><span class="line">        this.context = context;</span><br><span class="line">        this.items = items;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public int getCount() &#123;</span><br><span class="line">        return items.size();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public Object getItem(int position) &#123;</span><br><span class="line">        return items.get(position);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public long getItemId(int position) &#123;</span><br><span class="line">        return position;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    @Override</span><br><span class="line">    public View getView(int position, View convertView, ViewGroup parent) &#123;</span><br><span class="line">        View view = convertView;</span><br><span class="line">        ViewHolder holder;</span><br><span class="line">        if (view == null) &#123;</span><br><span class="line">            LayoutInflater inflater = (LayoutInflater) context.getSystemService(Context.LAYOUT_INFLATER_SERVICE);</span><br><span class="line">            view = inflater.inflate(R.layout.grid_item, parent, false);</span><br><span class="line">            holder = new ViewHolder();</span><br><span class="line">            holder.imageView = (ImageView) view.findViewById(R.id.image);</span><br><span class="line">            holder.titleView = (TextView) view.findViewById(R.id.title);</span><br><span class="line">            view.setTag(holder);</span><br><span class="line">        &#125; else &#123;</span><br><span class="line">            holder = (ViewHolder) view.getTag();</span><br><span class="line">        &#125;</span><br><span class="line">        GridItem item = items.get(position);</span><br><span class="line">        holder.imageView.setImageResource(item.getImage());</span><br><span class="line">        holder.titleView.setText(item.getTitle());</span><br><span class="line">        return view;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 安卓开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -安卓开发 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo使用|新建文章</title>
      <link href="/2023/03/20/hexo%E4%BD%BF%E7%94%A8-%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/"/>
      <url>/2023/03/20/hexo%E4%BD%BF%E7%94%A8-%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="hexo使用-新建文章"><a href="#hexo使用-新建文章" class="headerlink" title=" hexo使用|新建文章"></a><center> hexo使用|新建文章</h1><h2 id="新建文章"><a href="#新建文章" class="headerlink" title="新建文章"></a>新建文章</h2><p>1.新建文章很简单，一条命令即可。命令如下，执行命令成功会返回一个路径，就是文章的所在路径，删除文章也只要删除对应的文章文件即可。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new 文章文件名</span><br></pre></td></tr></table></figure><p>2.新建草稿命令如下，草稿不会在博客上显示。在执行时加上 –draft 参数，或是把草稿中render_drafts参数设为true来预览草稿。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new draft 草稿文件名</span><br></pre></td></tr></table></figure><p>3.新建导航选项页界面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo new page 导航选项页文件名</span><br></pre></td></tr></table></figure><h2 id="发布草稿"><a href="#发布草稿" class="headerlink" title="发布草稿"></a>发布草稿</h2><p>草稿是不会显示到博客上面的，有两张方法发布草稿为正式文章</p><p>1、通过命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">hexo publish 文章文件名</span><br></pre></td></tr></table></figure><p>2.通过移动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">手动将“_drafts”目录下的草稿移动到“_posts”目录下即可发布草稿为正式文章。</span><br></pre></td></tr></table></figure><h2 id="添加分类和标签"><a href="#添加分类和标签" class="headerlink" title="添加分类和标签"></a>添加分类和标签</h2><p>文章分类和标签在文章中添加，文章的参数列表如下：</p><table><thead><tr><th align="center">参数</th><th align="center">描述</th><th align="center">默认值</th></tr></thead><tbody><tr><td align="center">layout</td><td align="center">布局</td><td align="center"></td></tr><tr><td align="center">title</td><td align="center">标题</td><td align="center">文章的文件名</td></tr><tr><td align="center">date</td><td align="center">建立日期</td><td align="center">文章建立日期</td></tr><tr><td align="center">updated</td><td align="center">更新日期</td><td align="center">文件更新日期</td></tr><tr><td align="center">comments</td><td align="center">开启文章的评论功能</td><td align="center">true</td></tr><tr><td align="center">tags</td><td align="center">标签</td><td align="center"></td></tr><tr><td align="center">cate</td><td align="center">分类</td><td align="center"></td></tr><tr><td align="center">permalink</td><td align="center">覆盖文章网址</td><td align="center"></td></tr></tbody></table><p>3.1添加分类</p><p>参数“categories”表示分类，一篇文章只能属于一个分类，如果添加了多个分类，则下一个分类为子分类。<br>添加分类的格式如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">categories:</span><br><span class="line">- 分类</span><br><span class="line">- 子分类</span><br><span class="line">- 子子分类</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 博客设置 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -博客 -hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇博客</title>
      <link href="/2023/03/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/"/>
      <url>/2023/03/15/%E7%AC%AC%E4%B8%80%E7%AF%87%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="第一篇博客"><a href="#第一篇博客" class="headerlink" title="第一篇博客"></a>第一篇博客</h1><h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>…</p><h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2>]]></content>
      
      
      <categories>
          
          <category> 主题优化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 测试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/15/hello-world/"/>
      <url>/2023/03/15/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
